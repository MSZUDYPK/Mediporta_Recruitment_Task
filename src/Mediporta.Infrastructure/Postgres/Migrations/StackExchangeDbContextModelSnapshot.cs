// <auto-generated />
using System;
using Mediporta.Infrastructure.Postgres.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Mediporta.Infrastructure.Postgres.Migrations
{
    [DbContext(typeof(StackExchangeDbContext))]
    partial class StackExchangeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Mediporta.Core.Population.Population", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Populations");
                });

            modelBuilder.Entity("Mediporta.Core.Tags.SimplifiedTag", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("PopulationId")
                        .HasColumnType("uuid");

                    b.Property<double>("Share")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("PopulationId");

                    b.ToTable("SimplifiedTags");
                });

            modelBuilder.Entity("Mediporta.Core.Tags.SimplifiedTag", b =>
                {
                    b.HasOne("Mediporta.Core.Population.Population", null)
                        .WithMany("SimplifiedTags")
                        .HasForeignKey("PopulationId");
                });

            modelBuilder.Entity("Mediporta.Core.Population.Population", b =>
                {
                    b.Navigation("SimplifiedTags");
                });
#pragma warning restore 612, 618
        }
    }
}
